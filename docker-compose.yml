version: '3.1'

services:
  nova-upload-service:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app
      - nova-upload-service-node-modules:/opt/npm
    working_dir: /usr/src/app
    ports:
      - "3000:3000"
      # node inspect port
      - "9229:9229"
    depends_on:
      - mongo
    environment:
      NODE_PORT: 3000

  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"

  mongo-admin:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://mongo:27017/

  minio:
    image: minio/minio
    restart: always
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: myAccessKey
      MINIO_ROOT_PASSWORD: mySecretKey
      # MINIO_NOTIFY_WEBHOOK_ENABLE_S3EVENT: "on"
      # MINIO_NOTIFY_WEBHOOK_ENDPOINT_S3EVENT: http://nova-api:3000/webhook
      # /usr/bin/mc event add myminio/nova arn:minio:sqs::S3EVENT:webhook -p --event put;
    depends_on:
      - nova-upload-service

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc config host add myminio http://minio:9000 myAccessKey mySecretKey;
      /usr/bin/mc mb myminio/nova;
      /usr/bin/mc policy set download myminio/nova;
      exit 0;
      "
  minio-lambda-bridge:
    image: uguraslan/minio-lambda-bridge:latest
    environment:
      MINIO_HOST: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: myAccessKey
      MINIO_SECRET_KEY: mySecretKey
      MINIO_NOTIFICATIONS_BUCKET: nova
      MINIO_NOTIFICATIONS_PREFIX:
      MINIO_NOTIFICATIONS_SUFFIX: .zip
      MINIO_NOTIFICATIONS_EVENTS: "s3:ObjectCreated:*"
      EVENT_LAMBDA_FUNCTION_PATH: s3Lambda/objectCreated.js
      EVENT_LAMBDA_HANDLER: handler
      AWS_ENDPOINT_URL_S3: http://minio:9000
      AWS_ACCESS_KEY_ID: myAccessKey
      AWS_SECRET_ACCESS_KEY: mySecretKey
      MONGODB_HOST: mongo
      MONGODB_PORT: 27017
      MONGODB_DB: novaUploadService
    volumes:
      - ./s3Lambda:/usr/src/app/s3Lambda
    depends_on:
      - createbuckets

volumes:
  mongo-data:
  nova-upload-service-node-modules:
  minio-data:
